plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-android'
    id 'kotlin-kapt'

}

android {
    namespace 'com.example.posapp'
    compileSdk 33

    defaultConfig {
        applicationId "com.example.posapp"
        minSdk 21
        targetSdk 33
        versionCode 1
        versionName "1.0"
//        multiDexEnabled = true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = '1.8'
        }
    buildFeatures {
        viewBinding = true
    }
    }

    dependencies {
        implementation 'com.google.code.gson:gson:2.9.0'

        implementation 'com.github.bumptech.glide:glide:4.12.0'
        annotationProcessor 'com.github.bumptech.glide:compiler:4.12.0'

// Retrofit
        implementation "com.squareup.retrofit2:retrofit:2.9.0"
// Retrofit with Scalar Converter
        implementation "com.squareup.retrofit2:converter-scalars:2.9.0"

        implementation 'javax.annotation:javax.annotation-api:1.3.2'
        implementation 'androidx.recyclerview:recyclerview:1.3.0'
        implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
        var room_version = "2.5.0"

        implementation("androidx.room:room-runtime:$room_version")
        annotationProcessor("androidx.room:room-compiler:$room_version")
        kapt "android.arch.persistence.room:compiler:1.1.1"

//     To use Kotlin annotation processing tool (kapt)
        kapt("androidx.room:room-compiler:$room_version")
////     To use Kotlin Symbol Processing (KSP)
//        ksp("androidx.room:room-compiler-processing:2.5.0")
        apply plugin: "kotlin-kapt"

        // optional - Kotlin Extensions and Coroutines support for Room
        implementation("androidx.room:room-ktx:$room_version")

        // optional - RxJava2 support for Room
        implementation("androidx.room:room-rxjava2:$room_version")

        // optional - RxJava3 support for Room
        implementation("androidx.room:room-rxjava3:$room_version")

        // optional - Guava support for Room, including Optional and ListenableFuture
        implementation("androidx.room:room-guava:$room_version")

        // optional - Test helpers
        testImplementation("androidx.room:room-testing:$room_version")

        // optional - Paging 3 Integration
        implementation("androidx.room:room-paging:$room_version")

        implementation 'androidx.core:core-ktx:1.9.0'
        implementation 'androidx.appcompat:appcompat:1.6.1'
        implementation 'com.google.android.material:material:1.8.0'
        implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
        testImplementation 'junit:junit:4.13.2'
        androidTestImplementation 'androidx.test.ext:junit:1.1.5'
        androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'

        implementation("androidx.navigation:navigation-fragment-ktx:2.5.3")
        implementation("androidx.navigation:navigation-ui-ktx:2.5.3")
        implementation("androidx.navigation:navigation-dynamic-features-fragment:2.5.3")

        implementation 'androidx.recyclerview:recyclerview:1.3.0'
        implementation 'com.google.android.material:material:1.8.0'

        implementation 'androidx.fragment:fragment-ktx:1.5.5'

        tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
            kotlinOptions {
                jvmTarget = "11"
            }
        }

    }
